#comprehensive GitHub Actions workflow template for managing Supabase secrets securely

# Workflow Purpose:
# - Secure management of Supabase project secrets
# - Automated database migration and validation
# - Type generation for TypeScript projects
# - Continuous integration and security checks

# Prerequisites:
# 1. GitHub Secrets must be configured:
#    - SUPABASE_URL: Project's unique Supabase URL
#    - SUPABASE_ANON_KEY: Anonymous access key
#    - SUPABASE_SERVICE_ROLE_KEY: Elevated access service role key
#    - SUPABASE_ACCESS_TOKEN: Personal CLI authentication token
#    - SUPABASE_PROJECT_REF: Project reference ID

# Security Best Practices:
# - Never commit secrets directly to the repository
# - Use GitHub Secrets for all sensitive information
# - Rotate keys periodically (recommended every 90 days)
# - Limit service role key access
# - Implement principle of least privilege
# - Audit and monitor secret usage

# Recommended Secret Management:
# - Store long-term secrets in a secure password manager
# - Use short-lived tokens when possible
# - Enable two-factor authentication
# - Regularly review and prune access credentials

# Performance and Cost Considerations:
# - This workflow runs on every push and pull request to main branch
# - Adjust triggers as needed to manage GitHub Actions usage

#Key Security Recommendations:
#Never print or log secrets
#Use GitHub's encrypted secrets
#Rotate keys periodically
#Limit access to service role key
#Use least-privilege principle



name: Supabase CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  secrets-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Supabase CLI
        run: |
          curl -sL https://storage.googleapis.com/supabase-cli/releases/latest/supabase_linux_amd64.tar.gz | tar xz
          sudo mv supabase /usr/local/bin/
      
      - name: Validate Supabase Secrets
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          # Validate URL format
          if [[ ! "$SUPABASE_URL" =~ ^https://[a-z0-9-]+\.supabase\.co$ ]]; then
            echo "Invalid Supabase URL format"
            exit 1
          fi
          
          # Check key lengths (approximate)
          if [[ ${#SUPABASE_ANON_KEY} -lt 50 || ${#SUPABASE_SERVICE_ROLE_KEY} -lt 50 ]]; then
            echo "Supabase keys appear to be invalid or too short"
            exit 1
          fi

  database-checks:
    needs: secrets-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Supabase CLI
        run: |
          curl -sL https://storage.googleapis.com/supabase-cli/releases/latest/supabase_linux_amd64.tar.gz | tar xz
          sudo mv supabase /usr/local/bin/
      
      - name: Initialize Supabase Project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase login
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
      
      - name: Run Database Migrations
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          supabase db push
      
      - name: Security Checks
        run: |
          supabase db lint

  type-generation:
    needs: database-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Supabase CLI
        run: |
          curl -sL https://storage.googleapis.com/supabase-cli/releases/latest/supabase_linux_amd64.tar.gz | tar xz
          sudo mv supabase /usr/local/bin/
      
      - name: Generate Types
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        run: |
          supabase gen types typescript > src/types/supabase.ts
      
      - name: Commit Generated Types
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add src/types/supabase.ts
          git commit -m "Update Supabase types" || exit 0
          git push
