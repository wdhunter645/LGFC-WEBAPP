name: Ops-Bot: Alert on Workflow Failure

on:
  workflow_run:
    workflows:
      - CI
      - search-cron
      - Traffic Simulator
      - Traffic Simulator (Monitored)
      - Supabase Daily Schema Backup
      - Supabase Weekly Full Backup
      - Supabase Monthly Full Backup
      - Ops Test: Intentional Failure
      - Ops Test: Timeout
      - Ops Self Test: Push Failure
      - ALS Events Scraper
      - Voting Automation
      - dev-bot
      - Dev-Bot: Daily Plan
      - Ops-Bot: Daily Report
      - Dev-Ops: Create Issue
    types:
      - completed

permissions:
  contents: write
  actions: read
  issues: write

jobs:
  alert:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    steps:
      - name: Prepare alert body
        id: prep
        run: |
          NAME="${{ github.event.workflow_run.name }}"
          CONCLUSION="${{ github.event.workflow_run.conclusion }}"
          STATUS="${{ github.event.workflow_run.status }}"
          HTML_URL="${{ github.event.workflow_run.html_url }}"
          STARTED="${{ github.event.workflow_run.run_started_at }}"
          RUN_NUMBER="${{ github.event.workflow_run.run_number }}"
          REPO="${{ github.repository }}"
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          COMMIT="${{ github.event.workflow_run.head_sha }}"

          cat > body.txt <<EOF
          # Ops Alert: ${NAME} failed

          - Repo: ${REPO}
          - Branch: ${BRANCH}
          - Run: #${RUN_NUMBER}
          - Status: ${STATUS}
          - Conclusion: ${CONCLUSION}
          - Started: ${STARTED}
          - Commit: ${COMMIT}
          - Logs: ${HTML_URL}

          Next: Investigate failing step, post root cause, and fix. If transient, note mitigation.
          EOF
          echo "body<<__BODY__" >> $GITHUB_OUTPUT
          cat body.txt >> $GITHUB_OUTPUT
          echo "__BODY__" >> $GITHUB_OUTPUT

      - name: Create or update consolidated Ops Alerts issue
        uses: actions/github-script@v7
        continue-on-error: true
        env:
          PREPARED: ${{ steps.prep.outputs.body }}
        with:
          github-token: ${{ secrets.OPS_BOT_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const title = 'Ops Alerts (auto)';
            const prepared = process.env.PREPARED || '';

            // Search for an open consolidated Ops Alerts issue
            const search = await github.rest.search.issuesAndPullRequests({
              q: `repo:${owner}/${repo} is:issue in:title "${title}" state:open`
            });

            if (search.data.total_count > 0) {
              const issue = search.data.items[0];
              await github.rest.issues.createComment({
                owner, repo, issue_number: issue.number, body: prepared
              });
              core.summary.addHeading('Updated Ops Alerts issue').addLink(title, issue.html_url).write();
            } else {
              const { data: created } = await github.rest.issues.create({
                owner, repo, title, body: prepared, labels: ['ops', 'alert']
              });
              core.summary.addHeading('Created Ops Alerts issue').addLink(title, created.html_url).write();
            }

      - name: Optional Slack notification
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ -n "${SLACK_WEBHOOK_URL}" ]; then
            NAME="${{ github.event.workflow_run.name }}"
            CONCLUSION="${{ github.event.workflow_run.conclusion }}"
            HTML_URL="${{ github.event.workflow_run.html_url }}"
            REPO="${{ github.repository }}"
            BRANCH="${{ github.event.workflow_run.head_branch }}"
            TEXT="Ops Alert: ${NAME} (${REPO}@${BRANCH}) — ${CONCLUSION}. ${HTML_URL}"
            PAYLOAD=$(printf '{"text":"%s"}' "${TEXT}")
            curl -s -X POST -H 'Content-type: application/json' --data "${PAYLOAD}" "${SLACK_WEBHOOK_URL}" || true
          else
            echo "No SLACK_WEBHOOK_URL configured; skipping Slack notification."
          fi

      - name: Checkout repository for PR log
        uses: actions/checkout@v4

      - name: Append alert to infra/OPS_ALERTS_LOG.md
        run: |
          mkdir -p infra
          echo "" >> infra/OPS_ALERTS_LOG.md
          echo "## ${{ github.event.workflow_run.name }} — ${{ github.event.workflow_run.conclusion }} (run #${{ github.event.workflow_run.run_number }})" >> infra/OPS_ALERTS_LOG.md
          echo "- Repo: ${{ github.repository }}" >> infra/OPS_ALERTS_LOG.md
          echo "- Branch: ${{ github.event.workflow_run.head_branch }}" >> infra/OPS_ALERTS_LOG.md
          echo "- Started: ${{ github.event.workflow_run.run_started_at }}" >> infra/OPS_ALERTS_LOG.md
          echo "- Logs: ${{ github.event.workflow_run.html_url }}" >> infra/OPS_ALERTS_LOG.md

      - name: Create PR with alert log entry
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.OPS_BOT_TOKEN }}
          commit-message: "ops-bot: log ${{ github.event.workflow_run.name }} failure (run #${{ github.event.workflow_run.run_number }})"
          branch: "cursor/ops-bot/alerts-${{ github.run_id }}"
          title: "ops-bot: log ${{ github.event.workflow_run.name }} failure (#${{ github.event.workflow_run.run_number }})"
          body: "Automated alert log entry. See run: ${{ github.event.workflow_run.html_url }}"
          committer: "ops-bot <ops-bot@users.noreply.github.com>"
          author: "ops-bot <ops-bot@users.noreply.github.com>"
