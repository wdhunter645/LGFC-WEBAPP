name: Ops-Bot: Triage Failed Runs

on:
  workflow_run:
    workflows:
      - CI
      - search-cron
      - Traffic Simulator
      - Traffic Simulator (Monitored)
      - Supabase Daily Schema Backup
      - Supabase Weekly Full Backup
      - Supabase Monthly Full Backup
      - Ops Test: Intentional Failure
      - Ops Test: Timeout
      - Ops Self Test: Push Failure
      - ALS Events Scraper
      - Voting Automation
      - dev-bot
      - Dev-Bot: Daily Plan
      - Ops-Bot: Daily Report
      - Dev-Ops: Create Issue
      - Ops Self Test: Push Failure
    types:
      - completed

permissions:
  contents: write
  actions: read
  issues: write

jobs:
  triage:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    steps:
      - name: Create or update per-failure Issue
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const { owner, repo } = context.repo;
            const wr = context.payload.workflow_run;
            const name = wr.name;
            const conclusion = wr.conclusion;
            const runNumber = wr.run_number;
            const htmlUrl = wr.html_url;
            const branch = wr.head_branch;
            const commit = wr.head_sha;
            const actor = (wr.actor && wr.actor.login) || undefined;

            const title = `OPS: ${name} failed (run #${runNumber} on ${branch})`;

            // Avoid duplicates: search for open issue with same title
            const search = await github.rest.search.issuesAndPullRequests({
              q: `repo:${owner}/${repo} is:issue in:title "${title}" state:open`
            });

            const body = [
              `Workflow: ${name}`,
              `Branch: ${branch}`,
              `Run: #${runNumber}`,
              `Conclusion: ${conclusion}`,
              `Commit: ${commit}`,
              `Logs: ${htmlUrl}`,
              '',
              'Next: Investigate failing step, document root cause, and fix. If transient, note mitigation.'
            ].join('\n');

            try {
              if (search.data.total_count > 0) {
                const issue = search.data.items[0];
                await github.rest.issues.createComment({ owner, repo, issue_number: issue.number, body });
                await github.rest.issues.addLabels({ owner, repo, issue_number: issue.number, labels: ['ops', 'priority:high'] }).catch(() => {});
                if (actor) { await github.rest.issues.addAssignees({ owner, repo, issue_number: issue.number, assignees: [actor] }).catch(() => {}); }
              } else {
                const { data: created } = await github.rest.issues.create({ owner, repo, title, body, labels: ['ops', 'priority:high'] });
                if (actor) { await github.rest.issues.addAssignees({ owner, repo, issue_number: created.number, assignees: [actor] }).catch(() => {}); }
                await core.summary.addHeading('Created ops triage issue').addLink(title, created.html_url).write();
              }
            } catch (e) {
              core.warning('Failed to write GitHub Issue (likely permissions): ' + (e && e.message));
            }

      - name: Checkout repository for PR log
        uses: actions/checkout@v4

      - name: Append triage entry to infra/OPS_ALERTS_LOG.md
        run: |
          NAME="${{ github.event.workflow_run.name }}"
          CONCLUSION="${{ github.event.workflow_run.conclusion }}"
          HTML_URL="${{ github.event.workflow_run.html_url }}"
          RUN_NUMBER="${{ github.event.workflow_run.run_number }}"
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          mkdir -p infra
          echo "" >> infra/OPS_ALERTS_LOG.md
          echo "## TRIAGE: ${NAME} â€” ${CONCLUSION} (run #${RUN_NUMBER})" >> infra/OPS_ALERTS_LOG.md
          echo "- Branch: ${BRANCH}" >> infra/OPS_ALERTS_LOG.md
          echo "- Logs: ${HTML_URL}" >> infra/OPS_ALERTS_LOG.md

      - name: Create PR with triage log entry
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "ops-bot: triage ${NAME} failure (run #${{ github.event.workflow_run.run_number }})"
          branch: "cursor/ops-bot/triage-${{ github.run_id }}"
          title: "ops-bot: triage ${NAME} failure (#${{ github.event.workflow_run.run_number }})"
          body: "Automated triage log entry. See run: ${{ github.event.workflow_run.html_url }}"
          committer: "ops-bot <ops-bot@users.noreply.github.com>"
          author: "ops-bot <ops-bot@users.noreply.github.com>"
