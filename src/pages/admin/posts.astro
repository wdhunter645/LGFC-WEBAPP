---
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout title="Admin: Member Posts | Lou Gehrig Fan Club" requireAuth={true}>
  <p><a class="underline" href="/admin">← Back to Admin Dashboard</a></p>
  <h1 class="text-2xl font-semibold mb-4">Member Posts</h1>
  <p id="status" class="text-gray-600">Loading…</p>
  <ul id="posts" class="space-y-3 mt-3"></ul>

  <script type="module">
    import { createClient } from '@supabase/supabase-js';
    const supabase = createClient(import.meta.env.VITE_SUPABASE_URL, import.meta.env.VITE_SUPABASE_ANON_KEY);

    const statusEl = document.getElementById('status');
    const postsEl = document.getElementById('posts');

    function row(p) {
      const li = document.createElement('li');
      li.className = 'border rounded bg-white p-3';
      li.innerHTML = `
        <div class="flex items-start justify-between gap-4">
          <div>
            <div class="font-semibold">${p.title || 'Post'}</div>
            <div class="text-xs text-gray-500">${new Date(p.created_at).toLocaleString()}</div>
            ${p.text ? `<p class=\"mt-1\">${p.text}</p>` : ''}
            ${p.media_url ? `<a class=\"text-blue-700 underline\" href=\"${p.media_url}\" target=\"_blank\" rel=\"noreferrer\">Media</a>` : ''}
          </div>
          <div class="flex gap-2">
            <button class="border rounded px-3 py-1" data-action="delete">Delete</button>
          </div>
        </div>
      `;
      li.querySelector('[data-action="delete"]').addEventListener('click', async () => {
        if (!confirm('Delete this post?')) return;
        const { error } = await supabase.from('member_posts').delete().eq('id', p.id);
        if (error) alert(error.message); else load();
      });
      return li;
    }

    async function load() {
      statusEl.textContent = 'Loading…';
      postsEl.innerHTML = '';
      const { data, error } = await supabase
        .from('member_posts')
        .select('*')
        .order('created_at', { ascending: false })
        .limit(100);
      if (error) {
        statusEl.textContent = `Error: ${error.message}`;
        return;
      }
      if (!data?.length) {
        statusEl.textContent = 'No posts yet.';
        return;
      }
      statusEl.remove();
      for (const p of data) postsEl.appendChild(row(p));
    }

    load();
  </script>
</BaseLayout>
