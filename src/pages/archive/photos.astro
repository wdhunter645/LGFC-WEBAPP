---
import BaseLayout from "../../layouts/BaseLayout.astro";
---

<BaseLayout title="Archive • Photo Gallery | Lou Gehrig Fan Club" description="Search and browse the photo archive." requireAuth={true}>
  <section class="max-w-6xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Photo Gallery</h1>

    <form id="search-form" class="flex flex-wrap gap-2 items-center">
      <input id="q" class="flex-1 min-w-[240px] border rounded px-3 py-2" placeholder="Search alt text, filename, or title…" />
      <button class="border rounded px-4 py-2 bg-blue-600 text-white">Search</button>
      <span id="count" class="text-sm text-gray-600 ml-auto"></span>
    </form>

    <div id="grid" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 mt-4"></div>

    <div class="flex justify-between items-center mt-6">
      <button id="prev" class="border rounded px-3 py-2 disabled:opacity-50">Prev</button>
      <div id="pageinfo" class="text-sm text-gray-600"></div>
      <button id="next" class="border rounded px-3 py-2 disabled:opacity-50">Next</button>
    </div>
    <p id="status" class="text-gray-600 mt-3"></p>
  </section>

  <script type="module">
    import { createClient } from '@supabase/supabase-js';
    const supabase = createClient(import.meta.env.VITE_SUPABASE_URL, import.meta.env.VITE_SUPABASE_ANON_KEY);

    const q = document.getElementById('q');
    const form = document.getElementById('search-form');
    const grid = document.getElementById('grid');
    const prev = document.getElementById('prev');
    const nextBtn = document.getElementById('next');
    const pageinfo = document.getElementById('pageinfo');
    const statusEl = document.getElementById('status');
    const countEl = document.getElementById('count');

    const PAGE_SIZE = 20;
    let page = 1;
    let lastPage = false;

    function normalize(m) {
      return {
        id: m.id,
        url: m.media_url ?? m.url,
        type: m.media_type ?? m.type ?? 'image',
        alt: m.alt_text ?? m.file_name ?? '',
        title: m.content_items?.title ?? ''
      };
    }

    function render(items) {
      grid.innerHTML = '';
      for (const it of items) {
        const a = document.createElement('a');
        a.href = it.url;
        a.target = '_blank';
        a.rel = 'noreferrer';
        a.className = 'block border rounded overflow-hidden bg-white hover:shadow';
        a.innerHTML = `
          <img src="${it.url}" alt="${(it.alt || it.title).replace(/"/g,'&quot;')}" class="w-full h-40 object-cover" loading="lazy" />
          <div class="p-2 text-xs text-gray-700 truncate">${it.title || it.alt || 'Photo'}</div>
        `;
        grid.appendChild(a);
      }
    }

    async function load() {
      statusEl.textContent = 'Loading…';
      const term = q.value.trim();
      let query = supabase
        .from('media_files')
        .select('*, content_items(title)')
        .eq('media_type', 'image');

      if (term) {
        // Try to match across alt_text, file_name, and related content_items.title
        query = query.or(`alt_text.ilike.%${term}%,file_name.ilike.%${term}%,content_items.title.ilike.%${term}%`);
      }

      const from = (page - 1) * PAGE_SIZE;
      const to = from + PAGE_SIZE - 1;
      query = query.order('created_at', { ascending: false }).range(from, to);

      const [{ data, error }, { count, error: countError }] = await Promise.all([
        query,
        supabase.from('media_files').select('*', { count: 'exact', head: true })
          .eq('media_type', 'image')
          .or(term ? `alt_text.ilike.%${term}%,file_name.ilike.%${term}%` : 'id.not.is.null')
      ]);

      if (error || countError) {
        statusEl.textContent = `Error: ${(error || countError).message}`;
        return;
      }

      const items = (data ?? []).map(normalize);
      render(items);
      lastPage = items.length < PAGE_SIZE;
      pageinfo.textContent = `Page ${page}`;
      prev.disabled = page <= 1;
      nextBtn.disabled = lastPage;
      statusEl.textContent = items.length ? '' : 'No photos found.';
      countEl.textContent = typeof count === 'number' ? `${count} photos` : '';
    }

    form.addEventListener('submit', (e) => {
      e.preventDefault();
      page = 1;
      load();
    });

    prev.addEventListener('click', () => { if (page > 1) { page--; load(); } });
    nextBtn.addEventListener('click', () => { if (!lastPage) { page++; load(); } });

    load();
  </script>
</BaseLayout>