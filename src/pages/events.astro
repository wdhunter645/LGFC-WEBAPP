---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Events | Lou Gehrig Fan Club" description="Upcoming fan club events and other Lou Gehrig related events.">
  <section class="max-w-5xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Events</h1>
    <p class="text-gray-700 mb-6">Fan club events are listed first, followed by other Lou Gehrig related events. MLB Lou Gehrig Day is specially highlighted.</p>

    <h2 class="text-2xl font-semibold mt-6 mb-2">Club Events</h2>
    <div id="club-status" class="text-gray-600">Loading…</div>
    <ul id="club-list" class="space-y-3 mt-2"></ul>

    <h2 class="text-2xl font-semibold mt-8 mb-2">Other Events</h2>
    <div id="other-status" class="text-gray-600">Loading…</div>
    <ul id="other-list" class="space-y-3 mt-2"></ul>
  </section>

  <script type="module">
    import { createClient } from '@supabase/supabase-js';
    const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
    const SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;
    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

    const clubStatus = document.getElementById('club-status');
    const otherStatus = document.getElementById('other-status');
    const clubList = document.getElementById('club-list');
    const otherList = document.getElementById('other-list');

    function normalizeEvent(e) {
      return {
        id: e.id,
        title: e.title ?? e.name ?? 'Untitled Event',
        description: e.description ?? e.details ?? '',
        start_at: e.start_at ?? e.start_time ?? e.start ?? e.date ?? e.startDate ?? null,
        location: e.location ?? e.place ?? '',
        link_url: e.link_url ?? e.url ?? e.link ?? '',
        is_mlb_lou_gehrig_day: e.is_mlb_lou_gehrig_day ?? e.is_lg_day ?? e.is_lou_gehrig_day ?? false,
        is_club_event: e.is_club_event ?? e.club_event ?? e.is_club ?? false,
      };
    }

    function renderEvent(li, e) {
      const when = e.start_at ? new Date(e.start_at).toLocaleString() : '';
      const badge = e.is_mlb_lou_gehrig_day ? '<span class="ml-2 text-xs bg-red-600 text-white px-2 py-0.5 rounded">Lou Gehrig Day</span>' : '';
      li.className = 'border p-3 rounded bg-white';
      li.innerHTML = `
        <div class="flex items-center justify-between">
          <div>
            <div class="font-semibold">${e.title}${badge}</div>
            <div class="text-sm text-gray-600">${when}${e.location ? ` • ${e.location}` : ''}</div>
            ${e.description ? `<p class="mt-1 text-sm">${e.description}</p>` : ''}
          </div>
          ${e.link_url ? `<a class="text-blue-700 underline" href="${e.link_url}" target="_blank" rel="noreferrer">Details</a>` : ''}
        </div>
      `;
    }

    async function loadEvents() {
      try {
        const { data: all, error } = await supabase
          .from('events')
          .select('*')
          .order('start_at', { ascending: true })
          .limit(200);
        if (error) throw error;

        const normalized = (all ?? []).map(normalizeEvent);
        const club = normalized.filter(ev => ev.is_club_event);
        const other = normalized.filter(ev => !ev.is_club_event);

        if (!club.length) {
          clubStatus.textContent = 'No upcoming club events.';
        } else {
          clubStatus.remove();
          for (const ev of club) {
            const li = document.createElement('li');
            renderEvent(li, ev);
            clubList.appendChild(li);
          }
        }

        if (!other.length) {
          otherStatus.textContent = 'No other events found.';
        } else {
          otherStatus.remove();
          for (const ev of other) {
            const li = document.createElement('li');
            renderEvent(li, ev);
            otherList.appendChild(li);
          }
        }
      } catch (e) {
        clubStatus.textContent = `Error: ${e.message}`;
        otherStatus.textContent = `Error: ${e.message}`;
      }
    }

    loadEvents();
  </script>
</BaseLayout>