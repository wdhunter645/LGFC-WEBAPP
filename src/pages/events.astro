---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

// Get all events and sort by start date
const events = await getCollection('events');
const now = new Date();

// Separate upcoming and past events
const upcomingEvents = events
  .filter(event => new Date(event.data.startDate) >= now)
  .sort((a, b) => new Date(a.data.startDate).getTime() - new Date(b.data.startDate).getTime());

const pastEvents = events
  .filter(event => new Date(event.data.startDate) < now)
  .sort((a, b) => new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime());
---

<BaseLayout title="Events | Lou Gehrig Fan Club">
  <div class="max-w-6xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-8">Events</h1>
    
    <!-- Upcoming Events -->
    <section class="mb-12">
      <h2 class="text-2xl font-semibold mb-6 text-green-800">Upcoming Events</h2>
      {upcomingEvents.length > 0 ? (
        <div class="grid gap-6">
          {upcomingEvents.map((event) => (
            <article class="bg-white rounded-lg shadow-md overflow-hidden border-l-4 border-green-500">
              {event.data.image && (
                <div class="h-48 bg-gray-200">
                  <img 
                    src={event.data.image} 
                    alt={event.data.title}
                    class="w-full h-full object-cover"
                  />
                </div>
              )}
              <div class="p-6">
                <div class="flex items-start justify-between mb-4">
                  <h3 class="text-xl font-semibold text-gray-900">{event.data.title}</h3>
                  {event.data.isClubEvent && (
                    <span class="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                      Club Event
                    </span>
                  )}
                </div>
                
                <div class="flex items-center text-sm text-gray-600 mb-3">
                  <span class="mr-4">
                    📅 {new Date(event.data.startDate).toLocaleDateString('en-US', {
                      weekday: 'long',
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </span>
                  {event.data.location && (
                    <span>📍 {event.data.location}</span>
                  )}
                </div>
                
                {event.data.endDate && (
                  <p class="text-sm text-gray-600 mb-3">
                    Ends: {new Date(event.data.endDate).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </p>
                )}
                
                <p class="text-gray-700 mb-4">{event.data.description}</p>
                
                {event.data.body && (
                  <div class="prose prose-sm max-w-none mb-4">
                    {event.render()}
                  </div>
                )}
                
                {event.data.externalLink && (
                  <a 
                    href={event.data.externalLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
                  >
                    Learn More →
                  </a>
                )}
                
                {event.data.tags && event.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2 mt-4">
                    {event.data.tags.map((tag) => (
                      <span class="px-2 py-1 bg-gray-100 text-gray-800 text-xs rounded-full">
                        {tag}
                      </span>
                    ))}
                  </div>
                )}
              </div>
            </article>
          ))}
        </div>
      ) : (
        <p class="text-gray-500 text-center py-8">No upcoming events scheduled.</p>
      )}
    </section>
    
    <!-- Past Events -->
    <section>
      <h2 class="text-2xl font-semibold mb-6 text-gray-800">Past Events</h2>
      {pastEvents.length > 0 ? (
        <div class="grid gap-4">
          {pastEvents.slice(0, 10).map((event) => (
            <article class="bg-white rounded-lg shadow-sm border p-4">
              <div class="flex items-start justify-between">
                <div class="flex-1">
                  <h3 class="text-lg font-semibold text-gray-900">{event.data.title}</h3>
                  <p class="text-sm text-gray-600 mb-2">
                    {new Date(event.data.startDate).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                    {event.data.location && ` • ${event.data.location}`}
                  </p>
                  <p class="text-gray-700">{event.data.description}</p>
                </div>
                {event.data.isClubEvent && (
                  <span class="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full ml-4">
                    Club Event
                  </span>
                )}
              </div>
            </article>
          ))}
        </div>
      ) : (
        <p class="text-gray-500 text-center py-8">No past events to display.</p>
      )}
    </section>
  </div>
</BaseLayout>