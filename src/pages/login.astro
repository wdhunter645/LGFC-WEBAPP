---
import BaseLayout from "../layouts/BaseLayout.astro";
const { redirect = '' } = Astro.url.searchParams;
---

<BaseLayout title="Login | Lou Gehrig Fan Club" description="Sign in to contribute content and manage submissions.">
  <section class="max-w-md mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Join the Fan Club</h1>
    <p class="text-gray-700 mb-6">Choose your login method or continue with email. After login, you'll be redirected to your profile to set your screen name and see Free Membership Card instructions.</p>

    <!-- OAuth Options -->
    <div class="space-y-3 mb-6">
      <button id="google-login" class="w-full border rounded px-4 py-3 bg-white hover:bg-gray-50 flex items-center justify-center gap-3">
        <span class="text-xl">ðŸ”µ</span>
        <span class="font-medium">Continue with Google</span>
      </button>
      
      <button id="facebook-login" class="w-full border rounded px-4 py-3 bg-white hover:bg-gray-50 flex items-center justify-center gap-3">
        <span class="text-xl">ðŸ“˜</span>
        <span class="font-medium">Continue with Facebook</span>
      </button>
    </div>

    <div class="relative mb-6">
      <div class="absolute inset-0 flex items-center">
        <div class="w-full border-t border-gray-300"></div>
      </div>
      <div class="relative flex justify-center text-sm">
        <span class="px-2 bg-white text-gray-500">or</span>
      </div>
    </div>

    <!-- Other Email Form -->
    <form id="other-email-form" class="space-y-3">
      <input id="email" type="email" required class="w-full border rounded px-3 py-2 text-slate-900 placeholder-gray-500" placeholder="Enter any email address" />
      <button type="submit" class="w-full border rounded px-4 py-2 bg-blue-600 text-white hover:bg-blue-700">
        Continue with Email
      </button>
    </form>

    <p id="message" class="text-sm text-gray-600 mt-3"></p>

    <!-- Email Validation Step -->
    <div id="email-validation" class="mt-6 hidden">
      <div class="bg-blue-50 border border-blue-200 rounded p-4">
        <h2 class="font-semibold text-blue-800 mb-2">Check Your Email</h2>
        <p class="text-blue-700 text-sm mb-3">We've sent a validation email to <span id="validation-email" class="font-medium"></span></p>
        <p class="text-blue-600 text-xs">Click the link in the email to complete your registration.</p>
      </div>
    </div>

    <div id="session" class="mt-6 hidden">
      <h2 class="font-semibold mb-2">Session</h2>
      <pre id="session-json" class="text-xs bg-gray-100 p-2 rounded"></pre>
      <button id="signout" class="mt-2 border rounded px-3 py-1">Sign out</button>
    </div>
  </section>

  <script type="module">
    import { createClient } from '../lib/supabase-client.js';
    const supabase = createClient();

    const googleBtn = document.getElementById('google-login');
    const facebookBtn = document.getElementById('facebook-login');
    const otherEmailForm = document.getElementById('other-email-form');
    const email = document.getElementById('email');
    const message = document.getElementById('message');
    const emailValidation = document.getElementById('email-validation');
    const validationEmail = document.getElementById('validation-email');
    const sessionDiv = document.getElementById('session');
    const sessionJson = document.getElementById('session-json');
    const signoutBtn = document.getElementById('signout');
    const redirectTarget = decodeURIComponent('{redirect}');

    async function refreshSession() {
      const { data } = await supabase.auth.getSession();
      if (data?.session) {
        sessionDiv.classList.remove('hidden');
        sessionJson.textContent = JSON.stringify({ user: data.session.user }, null, 2);
        if (redirectTarget) {
          window.location.href = redirectTarget;
        }
      } else {
        sessionDiv.classList.add('hidden');
        sessionJson.textContent = '';
      }
    }

    // Google OAuth
    googleBtn.addEventListener('click', async () => {
      message.textContent = 'Redirecting to Google...';
      const { error } = await supabase.auth.signInWithOAuth({
        provider: 'google',
        options: {
          redirectTo: redirectTarget ? `${window.location.origin}${redirectTarget}` : window.location.origin
        }
      });
      if (error) {
        message.textContent = `Error: ${error.message}`;
      }
    });

    // Facebook OAuth
    facebookBtn.addEventListener('click', async () => {
      message.textContent = 'Redirecting to Facebook...';
      const { error } = await supabase.auth.signInWithOAuth({
        provider: 'facebook',
        options: {
          redirectTo: redirectTarget ? `${window.location.origin}${redirectTarget}` : window.location.origin
        }
      });
      if (error) {
        message.textContent = `Error: ${error.message}`;
      }
    });

    // Other Email Form
    otherEmailForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const emailValue = email.value.trim();
      
      if (!emailValue) {
        message.textContent = 'Please enter an email address.';
        return;
      }

      message.textContent = 'Sending validation email...';
      
      // Check if user exists
      const { data: existingUser } = await supabase.auth.admin.getUserByEmail(emailValue);
      
      if (existingUser?.user) {
        // User exists, send magic link
        const { error } = await supabase.auth.signInWithOtp({ 
          email: emailValue,
          options: {
            emailRedirectTo: redirectTarget ? `${window.location.origin}${redirectTarget}` : window.location.origin
          }
        });
        
        if (error) {
          message.textContent = `Error: ${error.message}`;
        } else {
          showEmailValidation(emailValue);
          message.textContent = '';
        }
      } else {
        // New user, send confirmation email
        const { error } = await supabase.auth.signInWithOtp({ 
          email: emailValue,
          options: {
            emailRedirectTo: redirectTarget ? `${window.location.origin}${redirectTarget}` : window.location.origin,
            data: {
              is_new_user: true
            }
          }
        });
        
        if (error) {
          message.textContent = `Error: ${error.message}`;
        } else {
          showEmailValidation(emailValue);
          message.textContent = '';
        }
      }
    });

    function showEmailValidation(emailValue) {
      emailValidation.classList.remove('hidden');
      validationEmail.textContent = emailValue;
      otherEmailForm.classList.add('hidden');
    }

    signoutBtn.addEventListener('click', async () => {
      await supabase.auth.signOut();
      await refreshSession();
    });

    refreshSession();
  </script>
</BaseLayout>