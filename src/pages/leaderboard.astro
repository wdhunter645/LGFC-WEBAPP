---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Picture Vote Leaderboard | Lou Gehrig Fan Club" description="Top images by votes (overall and today).">
  <section class="max-w-5xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Leaderboard</h1>

    <!-- Last Week's Winner -->
    <div class="mb-8">
      <h2 class="text-2xl font-semibold mb-3">Last Week's Winner</h2>
      <div id="weekly" class="border rounded overflow-hidden bg-white max-w-sm">
        <img id="weekly-image" src="/placeholder.svg" alt="Weekly winner" class="w-full h-48 object-cover" />
        <div class="p-3 text-center">
          <div id="weekly-title" class="font-semibold text-gray-800">Loading…</div>
          <div id="weekly-votes" class="text-sm text-gray-600 mt-1"></div>
        </div>
      </div>
    </div>

    <h2 class="text-2xl font-semibold mt-4">Today</h2>
    <p id="today-status" class="text-gray-600">Loading…</p>
    <div id="today" class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-2"></div>

    <h2 class="text-2xl font-semibold mt-8">Overall</h2>
    <p id="all-status" class="text-gray-600">Loading…</p>
    <div id="all" class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-2"></div>
  </section>

  <script type="module">
    import { createClient } from '../lib/supabase-client.js';
    const supabase = createClient();

    const todayEl = document.getElementById('today');
    const allEl = document.getElementById('all');
    const todayStatus = document.getElementById('today-status');
    const allStatus = document.getElementById('all-status');
    const weeklyTitle = document.getElementById('weekly-title');
    const weeklyVotes = document.getElementById('weekly-votes');
    const weeklyImage = document.getElementById('weekly-image');

    const imageMeta = {
      gehrig1: {
        url: 'https://readdy.ai/api/search-image?query=Lou%20Gehrig%20in%20classic%20New%20York%20Yankees%20pinstripe%20uniform%20swinging%20baseball%20bat%20at%20home%20plate%2C%20vintage%20black%20and%20white%20photography%20style%2C%20Yankee%20Stadium%20background%2C%201930s%20baseball%20action%20shot%2C%20iconic%20sports%20moment&width=400&height=500&seq=gehrig1&orientation=portrait',
        title: 'The Iron Horse at Bat'
      },
      gehrig2: {
        url: 'https://readdy.ai/api/search-image?query=Lou%20Gehrig%20in%20New%20York%20Yankees%20uniform%20giving%20farewell%20speech%20at%20Yankee%20Stadium%2C%20emotional%20moment%2C%20crowd%20in%20background%2C%20vintage%201939%20baseball%20photography%2C%20historic%20sports%20farewell%20ceremony&width=400&height=500&seq=gehrig2&orientation=portrait',
        title: 'Farewell Speech'
      }
    };

    function card(imageId, votes) {
      const img = imageMeta[imageId] || { url: '/placeholder.svg', title: imageId };
      const div = document.createElement('div');
      div.className = 'border rounded overflow-hidden bg-white';
      div.innerHTML = `
        <img src="${img.url}" alt="${img.title}" class="w-full h-40 object-cover" loading="lazy" />
        <div class="p-2 text-sm flex items-center justify-between">
          <span class="truncate">${img.title}</span>
          <span class="font-semibold">${votes}</span>
        </div>
      `;
      return div;
    }

    function aggregate(rows) {
      const map = new Map();
      for (const row of rows ?? []) {
        const key = row.image_id;
        map.set(key, (map.get(key) || 0) + 1);
      }
      return [...map.entries()].sort((a,b) => b[1]-a[1]);
    }

    async function loadToday() {
      todayStatus.textContent = 'Loading…';
      const start = new Date();
      const startIso = new Date(Date.UTC(start.getUTCFullYear(), start.getUTCMonth(), start.getUTCDate())).toISOString();
      const { data, error } = await supabase
        .from('visitor_votes')
        .select('image_id, voted_at')
        .gte('voted_at', startIso)
        .limit(10000);
      if (error) { todayStatus.textContent = `Error: ${error.message}`; return; }
      const items = aggregate(data).slice(0,12);
      todayEl.innerHTML = '';
      for (const [image_id, votes] of items) todayEl.appendChild(card(image_id, votes));
      todayStatus.textContent = items.length ? '' : 'No votes today.';
    }

    async function loadAll() {
      allStatus.textContent = 'Loading…';
      const { data, error } = await supabase
        .from('visitor_votes')
        .select('image_id')
        .limit(100000);
      if (error) { allStatus.textContent = `Error: ${error.message}`; return; }
      const items = aggregate(data).slice(0,12);
      allEl.innerHTML = '';
      for (const [image_id, votes] of items) allEl.appendChild(card(image_id, votes));
      allStatus.textContent = items.length ? '' : 'No votes recorded.';
    }

    async function loadWeeklyWinner() {
      const now = new Date();
      const weekAgo = new Date(now.getTime() - 7*24*60*60*1000);
      const { data, error } = await supabase
        .from('visitor_votes')
        .select('image_id, voted_at')
        .gte('voted_at', weekAgo.toISOString())
        .lt('voted_at', now.toISOString())
        .limit(100000);
      if (error) {
        weeklyTitle.textContent = 'Error loading';
        return;
      }
      const items = aggregate(data);
      if (!items.length) {
        weeklyTitle.textContent = 'No votes last week';
        weeklyVotes.textContent = '';
        return;
      }
      const [topId, count] = items[0];
      const meta = imageMeta[topId] || { title: topId, url: '/placeholder.svg' };
      weeklyTitle.textContent = meta.title;
      weeklyVotes.textContent = `${count} votes`;
      weeklyImage.src = meta.url;
      weeklyImage.alt = meta.title;
    }

    loadToday();
    loadAll();
    loadWeeklyWinner();
  </script>
</BaseLayout>