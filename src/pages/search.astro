---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Search | Lou Gehrig Fan Club" description="Search the archive for Lou Gehrig related content.">
  <section class="max-w-3xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Search</h1>
    <form id="search-form" class="flex gap-2">
      <input id="q" name="q" class="flex-1 border rounded px-3 py-2" placeholder="Search titles…" />
      <button class="border rounded px-4 py-2 bg-blue-600 text-white">Search</button>
    </form>

    <p id="status" class="text-gray-600 mt-4">Enter a query and press Search.</p>
    <ul id="results" class="space-y-3 mt-4"></ul>
  </section>

  <script type="module">

    const form = document.getElementById('search-form');
    const q = document.getElementById('q');
    const statusEl = document.getElementById('status');
    const resultsEl = document.getElementById('results');

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const term = q.value.trim();
      if (!term) return;

      if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
        statusEl.textContent = 'Supabase is not configured.';
        return;
      }

      statusEl.textContent = 'Searching…';
      resultsEl.innerHTML = '';

      try {
        const params = new URLSearchParams({
          select: 'id,title,source_url,date_found',
          order: 'date_found.desc',
          limit: '25',
          title: `ilike.*${term}*`
        });
        const res = await fetch(`${SUPABASE_URL}/rest/v1/content_items?${params.toString()}`, {
          headers: { apikey: SUPABASE_ANON_KEY }
        });
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        const items = await res.json();
        if (!items.length) {
          statusEl.textContent = 'No results.';
          return;
        }
        statusEl.textContent = `Found ${items.length} result(s).`;
        for (const item of items) {
          const li = document.createElement('li');
          li.className = 'border p-3 rounded bg-white';
          li.innerHTML = `
            <a class="text-blue-700 underline" href="${item.source_url}" target="_blank" rel="noreferrer">${item.title}</a>
            <div class="text-sm text-gray-600">Found: ${new Date(item.date_found).toLocaleString()}</div>
          `;
          resultsEl.appendChild(li);
        }
      } catch (e) {
        statusEl.textContent = `Error: ${e.message}`;
      }
    });
  </script>
</BaseLayout>