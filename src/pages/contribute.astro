---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Contribute | Lou Gehrig Fan Club" description="Submit links, media, or stories to help build the archive.">
  <section class="max-w-3xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Contribute</h1>
    <p class="text-gray-700 mb-6">Submit links, media, or stories to help build the archive.</p>

    <div id="auth-warning" class="hidden p-3 mb-4 rounded bg-yellow-50 text-yellow-800">
      Please <a href="/login" class="underline">log in</a> to submit content.
    </div>

    <form id="contrib-form" class="space-y-4">
      <div>
        <label class="block text-sm font-medium">Title</label>
        <input id="title" class="w-full border rounded px-3 py-2" placeholder="A short title" />
      </div>
      <div>
        <label class="block text-sm font-medium">URL</label>
        <input id="url" type="url" class="w-full border rounded px-3 py-2" placeholder="https://example.com/article" />
      </div>
      <div>
        <label class="block text-sm font-medium">Notes</label>
        <textarea id="notes" class="w-full border rounded px-3 py-2" rows="4" placeholder="Optional context or description"></textarea>
      </div>
      <button id="submit-btn" class="border rounded px-4 py-2 bg-blue-600 text-white">Submit</button>
    </form>

    <p id="status" class="text-sm text-gray-600 mt-3"></p>
  </section>

  <script type="module">
    import { createClient } from '../lib/supabase-client.js';

    const supabase = createClient();

    const authWarning = document.getElementById('auth-warning');
    const form = document.getElementById('contrib-form');
    const titleEl = document.getElementById('title');
    const urlEl = document.getElementById('url');
    const notesEl = document.getElementById('notes');
    const statusEl = document.getElementById('status');
    const submitBtn = document.getElementById('submit-btn');

    async function sha256Hex(input) {
      const data = new TextEncoder().encode(input);
      const hashBuffer = await crypto.subtle.digest('SHA-256', data);
      const hashArray = Array.from(new Uint8Array(hashBuffer));
      return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
    }

    async function ensureAuth() {
      const { data } = await supabase.auth.getSession();
      const isAuthed = Boolean(data?.session);
      authWarning.classList.toggle('hidden', isAuthed);
      submitBtn.disabled = !isAuthed;
      return data?.session ?? null;
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      statusEl.textContent = '';
      const session = await ensureAuth();
      if (!session) {
        statusEl.textContent = 'You must be logged in to submit.';
        return;
      }

      const title = titleEl.value.trim();
      const source_url = urlEl.value.trim();
      const content_text = notesEl.value.trim();

      if (!title || !source_url) {
        statusEl.textContent = 'Title and URL are required.';
        return;
      }

      submitBtn.disabled = true;
      statusEl.textContent = 'Submittingâ€¦';

      try {
        const content_hash = await sha256Hex(source_url);
        const payload = {
          title,
          source_url,
          content_text,
          content_hash,
          content_type: 'article',
          search_query: 'user_submission',
          created_by: session.user.id
        };

        const { data, error } = await supabase
          .from('content_items')
          .insert(payload)
          .select('*')
          .limit(1);

        if (error) throw error;
        statusEl.textContent = 'Submitted! Thank you.';
        form.reset();
      } catch (e) {
        statusEl.textContent = `Error: ${e.message}`;
      } finally {
        submitBtn.disabled = false;
      }
    });

    ensureAuth();
  </script>
</BaseLayout>