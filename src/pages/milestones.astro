---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Milestones | Lou Gehrig Fan Club" description="Key moments from Lou Gehrig's life and a daily on-this-date fact.">
  <section class="max-w-5xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">Milestones</h1>
    <div class="rounded border p-4 bg-blue-50">
      <h2 class="text-xl font-semibold">On this date…</h2>
      <p id="fact" class="mt-1 text-gray-800">Loading…</p>
    </div>

    <h2 class="text-2xl font-semibold mt-8 mb-2">Timeline</h2>
    <div id="timeline-status" class="text-gray-600">Loading…</div>
    <ul id="timeline" class="space-y-3 mt-2"></ul>
  </section>

  <script type="module">
    import { createClient } from '@supabase/supabase-js';
    const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
    const SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;
    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

    const factEl = document.getElementById('fact');
    const timelineStatus = document.getElementById('timeline-status');
    const timelineEl = document.getElementById('timeline');

    async function loadFact() {
      const now = new Date();
      const month = now.getMonth() + 1;
      const day = now.getDate();
      // Prefer facts for today not shown today, then least shown overall
      const { data, error } = await supabase
        .from('milestone_facts')
        .select('id,fact_text,month,day,last_shown_at,times_shown,source_url')
        .eq('month', month)
        .eq('day', day)
        .order('last_shown_at', { ascending: true, nullsFirst: true })
        .order('times_shown', { ascending: true })
        .limit(1);
      if (error) {
        factEl.textContent = `Error loading fact: ${error.message}`;
        return;
      }
      if (!data?.length) {
        factEl.textContent = 'No fact available for today yet.';
        return;
      }
      const f = data[0];
      const text = f.source_url ? `${f.fact_text} (<a class="underline" href="${f.source_url}" target="_blank" rel="noreferrer">source</a>)` : f.fact_text;
      factEl.innerHTML = text;
    }

    async function loadTimeline() {
      const { data, error } = await supabase
        .from('milestones')
        .select('id,title,description,occurred_on,year,month,day,link_url')
        .order('occurred_on', { ascending: true })
        .limit(500);
      if (error) {
        timelineStatus.textContent = `Error: ${error.message}`;
        return;
      }
      if (!data?.length) {
        timelineStatus.textContent = 'No milestones yet.';
        return;
      }
      timelineStatus.remove();
      for (const m of data) {
        const li = document.createElement('li');
        li.className = 'border p-3 rounded bg-white';
        const when = m.occurred_on ? new Date(m.occurred_on).toLocaleDateString() : [m.year, m.month, m.day].filter(Boolean).join('-');
        li.innerHTML = `
          <div class="font-semibold">${m.title}</div>
          <div class="text-sm text-gray-600">${when}</div>
          ${m.description ? `<p class="mt-1">${m.description}</p>` : ''}
          ${m.link_url ? `<a class="text-blue-700 underline" href="${m.link_url}" target="_blank" rel="noreferrer">Learn more</a>` : ''}
        `;
        timelineEl.appendChild(li);
      }
    }

    loadFact();
    loadTimeline();
  </script>
</BaseLayout>